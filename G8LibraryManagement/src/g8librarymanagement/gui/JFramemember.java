/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package g8librarymanagement.gui;
import g8librarymanagement.dao.memberDAO;
import g8librarymanagement.model.member;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class JFramemember extends javax.swing.JFrame {
    public DefaultTableModel tableModel;
    public boolean typeAction;
    /**
     * Creates new form member management
     */
    public JFramemember() {
        initComponents();
        loadData(); // load data khi mo window
        updateStatus(true);
        txt_member_id.setEnabled(false);
        this.setMinimumSize(new Dimension(860, 700));
    }
    
    public void updateStatus(boolean value) {
        but_addnew.setEnabled(value);
        but_update.setEnabled(value);
        but_delete.setEnabled(value);
        but_save.setEnabled(!value);
        but_cancel.setEnabled(!value);
    }
    
    public void loadData() {
        tableModel = (DefaultTableModel) jTablemember.getModel();
        int numRow=tableModel.getRowCount();
        if (numRow>0) {
            for (int index=0; index<numRow; index++) {
                tableModel.removeRow(0);
            }
        }
        memberDAO memDAO=new memberDAO();       
        ArrayList<member> list=memDAO.findAll();
        int i=1;
        for (member mem : list) {
            tableModel.addRow(new Object[]{i++,mem.getMember_id(),mem.getMember_email(),mem.getMember_name(),mem.getMember_gender(),mem.getMember_DOB(),mem.getMember_address(),mem.getMember_phone()});
        }
    }
    
    public void loadResult(ArrayList<member> list) {
        tableModel = (DefaultTableModel) jTablemember.getModel();
        int numRow=tableModel.getRowCount();
        if (numRow>0) {
            for (int index=0; index<numRow; index++) {
                tableModel.removeRow(0);
            }
        }
        int i=1;
        for (member mem : list) {
            tableModel.addRow(new Object[]{i++,mem.getMember_id(),mem.getMember_email(),mem.getMember_name(),mem.getMember_gender(),mem.getMember_DOB(),mem.getMember_address(),mem.getMember_phone()});
        }
    }
    
    public int checkEmail(String email){
        int check = -1;
        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
            + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher match = pattern.matcher(email);
        if(match.matches()){          
            check = 1;
        }
        return check;
    }
    
    public int checkPhone(String phone){
        int check = -1;
        Pattern pattern = Pattern.compile("(0|0+[0-9]{1})+([0-9]{9})\\b");
        Matcher match = pattern.matcher(phone);
        if(match.matches()){          
            check = 1;
        }
        return check;
    }
    
    public int checkEmpty(String input){
        int check = -1;
        if(input.isEmpty() || input.isBlank()){          
            check = 1;
        }
        return check;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_gender = new javax.swing.ButtonGroup();
        buttonGroup_search = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rb_searchid = new javax.swing.JRadioButton();
        rb_searchname = new javax.swing.JRadioButton();
        txt_searchid = new javax.swing.JTextField();
        txt_searchname = new javax.swing.JTextField();
        but_search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablemember = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        but_addnew = new javax.swing.JButton();
        but_update = new javax.swing.JButton();
        but_delete = new javax.swing.JButton();
        but_save = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        but_exit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txt_address = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rb_male = new javax.swing.JRadioButton();
        rb_female = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txt_membername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_member_id = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_dob = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Searching:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rb_searchid.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup_search.add(rb_searchid);
        rb_searchid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_searchid.setText("by ID:");

        rb_searchname.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup_search.add(rb_searchname);
        rb_searchname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_searchname.setText("by Name:");

        txt_searchid.setBackground(new java.awt.Color(255, 255, 204));

        txt_searchname.setBackground(new java.awt.Color(255, 255, 204));

        but_search.setBackground(new java.awt.Color(187, 149, 93));
        but_search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_search.setText("Search");
        but_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_searchActionPerformed(evt);
            }
        });

        jTablemember.setBackground(new java.awt.Color(255, 255, 204));
        jTablemember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Member ID", "Email", "Member name", "Gender", "Date Of Birth", "Address", "Phone"
            }
        ));
        jTablemember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablememberMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablemember);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_searchname)
                    .addComponent(rb_searchid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_searchid, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(txt_searchname))
                .addGap(61, 61, 61)
                .addComponent(but_search, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_searchid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(txt_searchname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rb_searchid)
                        .addGap(18, 18, 18)
                        .addComponent(rb_searchname))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(but_search)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 373, 813, 280);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jPanel3.setBackground(new java.awt.Color(255, 253, 232));

        but_addnew.setBackground(new java.awt.Color(187, 149, 93));
        but_addnew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_addnew.setText("Add new");
        but_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addnewActionPerformed(evt);
            }
        });

        but_update.setBackground(new java.awt.Color(187, 149, 93));
        but_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_update.setText("Update");
        but_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_updateActionPerformed(evt);
            }
        });

        but_delete.setBackground(new java.awt.Color(187, 149, 93));
        but_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_delete.setText("Delete");
        but_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_deleteActionPerformed(evt);
            }
        });

        but_save.setBackground(new java.awt.Color(187, 149, 93));
        but_save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_save.setText("Save");
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });

        but_cancel.setBackground(new java.awt.Color(187, 149, 93));
        but_cancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_cancel.setText("Cancel");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        but_exit.setBackground(new java.awt.Color(187, 149, 93));
        but_exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_exit.setText("Exit");
        but_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_exitActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Address:");

        txt_address.setBackground(new java.awt.Color(217, 217, 217));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Gender:");

        rb_male.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup_gender.add(rb_male);
        rb_male.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_male.setText("Male");

        rb_female.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup_gender.add(rb_female);
        rb_female.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_female.setText("Female");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Member name:");

        txt_membername.setBackground(new java.awt.Color(217, 217, 217));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Member ID:");

        txt_member_id.setBackground(new java.awt.Color(217, 217, 217));

        txt_email.setBackground(new java.awt.Color(217, 217, 217));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Email:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Phone:");

        txt_phone.setBackground(new java.awt.Color(217, 217, 217));
        txt_phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_phoneActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Date Of Birth:");

        txt_dob.setBackground(new java.awt.Color(217, 217, 217));
        txt_dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel2))
                                        .addGap(327, 327, 327)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_member_id, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt_membername, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(rb_male)
                                        .addGap(41, 41, 41)
                                        .addComponent(rb_female, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(but_addnew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(but_update, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_member_id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_membername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_male)
                    .addComponent(rb_female))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_addnew)
                    .addComponent(but_update)
                    .addComponent(but_delete)
                    .addComponent(but_save)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_cancel)
                        .addComponent(but_exit)))
                .addGap(21, 21, 21))
        );

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 3, 50)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(187, 149, 93));
        jLabel1.setText("Member Management");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(236, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(304, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 850, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addnewActionPerformed
        // TODO add your handling code here:
        updateStatus(false);
        typeAction=true;
    }//GEN-LAST:event_but_addnewActionPerformed

    private void but_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_updateActionPerformed
        // TODO add your handling code here:
        typeAction=false;
        updateStatus(false);
    }//GEN-LAST:event_but_updateActionPerformed

    private void but_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_deleteActionPerformed
        // TODO add your handling code here:
        int choose=JOptionPane.showConfirmDialog(null, "Do you want to delete?", "WARNING", JOptionPane.YES_NO_OPTION);
        if(choose==JOptionPane.YES_OPTION) {
            memberDAO memDAO=new memberDAO();
            ArrayList<member> list=memDAO.findAll();
            int index=jTablemember.getSelectedRow();
            memDAO.delete(list.get(index));
            loadData();
        }
    }//GEN-LAST:event_but_deleteActionPerformed

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        // TODO add your handling code here:
        if(typeAction) {
        // add new   
        member mem=new member();
        String email=txt_email.getText();
        int checkemail = mem.checkEmail(email);
            if(checkemail != -1){
                mem.setMember_email(email);}
                else {
                    JOptionPane.showMessageDialog(null, "Please input valid email!");}               
        mem.setMember_name(txt_membername.getText());
        if(rb_male.isSelected()) {
            mem.setMember_gender(1);
        } else {
            mem.setMember_gender(0);
        }
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        try {
        mem.setMember_DOB(sdf.parse(txt_dob.getText()));
        } catch(Exception ex) {
        JOptionPane.showMessageDialog(null, "Please input valid date!");}       
        mem.setMember_address(txt_address.getText());       
        String phone=txt_phone.getText();
        memberDAO memDAO=new memberDAO();
        
        if(checkEmpty(txt_email.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input member email!");}
        else if(checkEmpty(txt_membername.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input member name!");}
        else if(checkEmpty(txt_address.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input member address!");} 
        else if(checkEmpty(phone) == 1){
            JOptionPane.showMessageDialog(null, "Please input phone!");} 
        else if(checkPhone(phone) != 1){
            JOptionPane.showMessageDialog(null, "Please input valid phone number !");} 
        else {       
        mem.setMember_phone(phone);              
        memDAO.addNew(mem);
        loadData();
            }
        }
        
        else {
        // update    
        member mem=new member();
        mem.setMember_id(Integer.valueOf(txt_member_id.getText()));
        String email=txt_email.getText();
        int checkemail = mem.checkEmail(email);
            if(checkemail != -1){
                mem.setMember_email(email);}
                else {
                    JOptionPane.showMessageDialog(null, "Please input valid email!");}               
        mem.setMember_name(txt_membername.getText());
        if(rb_male.isSelected()) {
            mem.setMember_gender(1);
        } else {
            mem.setMember_gender(0);
        }
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        try {
        mem.setMember_DOB(sdf.parse(txt_dob.getText()));
        } catch(Exception ex) {
        JOptionPane.showMessageDialog(null, "Please input valid date!");}       
        mem.setMember_address(txt_address.getText());       
        String phone=txt_phone.getText();
        memberDAO memDAO=new memberDAO();
        
        if(checkEmpty(txt_email.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input member email!");}
        else if(checkEmpty(txt_membername.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input member name!");}
        else if(checkEmpty(txt_address.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input member address!");} 
        else if(checkEmpty(phone) == 1){
            JOptionPane.showMessageDialog(null, "Please input phone!");} 
        else if(checkPhone(phone) != 1){
            JOptionPane.showMessageDialog(null, "Please input valid phone number !");} 
        else {       
        mem.setMember_phone(phone);              
        memDAO.update(mem);
        loadData();
            }
        }
        updateStatus(true);
    }//GEN-LAST:event_but_saveActionPerformed

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        updateStatus(true);
        loadData();
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_but_exitActionPerformed

    private void but_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_searchActionPerformed
        // TODO add your handling code here:
        if(rb_searchid.isSelected()) {
            int id=Integer.parseInt(txt_searchid.getText());
                memberDAO memDAO=new memberDAO();
                member rs=memDAO.findByID(id);
                if (rs==null) {
                    JOptionPane.showMessageDialog(null, "No result!!");
                } else {
                    ArrayList<member> list=new ArrayList<member>();
                    list.add(rs);
                    loadResult(list);
                }
        } else if(rb_searchname.isSelected()) {
            String name=txt_searchname.getText();
            memberDAO emDAO=new memberDAO();
            ArrayList<member> list=emDAO.findByName(name);
            if(list.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No Result!!");
            } else {
                loadResult(list);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please choose the method!!");
        }
        updateStatus(false);
    }//GEN-LAST:event_but_searchActionPerformed

    private void txt_dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dobActionPerformed

    private void jTablememberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablememberMouseClicked
        // TODO add your handling code here:
        updateStatus(true);
        int index=jTablemember.getSelectedRow();
        memberDAO emDAO=new memberDAO();
        ArrayList<member> list=emDAO.findAll();
        txt_member_id.setText(String.valueOf(list.get(index).getMember_id()));
        txt_email.setText(list.get(index).getMember_email());
        txt_membername.setText(list.get(index).getMember_name());
        if(list.get(index).getMember_gender()==1) {
            rb_male.setSelected(true);
        } else {
            rb_female.setSelected(true);
        }
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        String dob =sdf.format(list.get(index).getMember_DOB());
        txt_dob.setText(dob);
        txt_address.setText(list.get(index).getMember_address());
        txt_phone.setText(list.get(index).getMember_phone());
    }//GEN-LAST:event_jTablememberMouseClicked

    private void txt_phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_phoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramemember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramemember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramemember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramemember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramemember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_addnew;
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_delete;
    private javax.swing.JButton but_exit;
    private javax.swing.JButton but_save;
    private javax.swing.JButton but_search;
    private javax.swing.JButton but_update;
    private javax.swing.ButtonGroup buttonGroup_gender;
    private javax.swing.ButtonGroup buttonGroup_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablemember;
    private javax.swing.JRadioButton rb_female;
    private javax.swing.JRadioButton rb_male;
    private javax.swing.JRadioButton rb_searchid;
    private javax.swing.JRadioButton rb_searchname;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_dob;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_member_id;
    private javax.swing.JTextField txt_membername;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_searchid;
    private javax.swing.JTextField txt_searchname;
    // End of variables declaration//GEN-END:variables
}
