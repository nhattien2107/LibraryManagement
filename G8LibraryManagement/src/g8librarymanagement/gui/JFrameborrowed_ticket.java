/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package g8librarymanagement.gui;
import g8librarymanagement.dao.borrowed_ticketDAO;
import g8librarymanagement.model.borrowed_ticket;
import java.awt.Dimension;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author Admin
 */
public class JFrameborrowed_ticket extends javax.swing.JFrame {
    public DefaultTableModel tableModel;
    public boolean typeAction;
    /**
     * Creates new form JFrameborrowed_ticket
     */
    public JFrameborrowed_ticket() {
        initComponents();
        loadData();
        updateStatus(true);
        this.setMinimumSize(new Dimension(860, 670));
        txt_ticket_id.setEnabled(false);       
    }
    public void updateStatus(boolean value) {
        but_addnew.setEnabled(value);
        but_update.setEnabled(value);
        but_delete.setEnabled(value);
        but_save.setEnabled(!value);
        but_cancel.setEnabled(!value);
    }
    public void loadData() {
        tableModel = (DefaultTableModel) jTableborrowed_ticket.getModel();
        int numRow=tableModel.getRowCount();
        if (numRow>0) {
            for (int index=0; index<numRow; index++) {
                tableModel.removeRow(0);
            }
        }
        borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();       
        ArrayList<borrowed_ticket> list=tkDAO.findALL();
        int i=1;
        for (borrowed_ticket tk : list) {
            tableModel.addRow(new Object[]{i++,tk.getTicket_id(),tk.getMember_id(),tk.getTicket_date(),tk.getReturn_date(),tk.getTicket_status(),tk.getEmployee_id()});
        }
    }
    public void loadResult(ArrayList<borrowed_ticket> list) {
        tableModel = (DefaultTableModel) jTableborrowed_ticket.getModel();
        int numRow=tableModel.getRowCount();
        if (numRow>0) {
            for (int index=0; index<numRow; index++) {
                tableModel.removeRow(0);
            }
        }   
        int i=1;
        for (borrowed_ticket tk : list) {
            tableModel.addRow(new Object[]{i++,tk.getTicket_id(),tk.getMember_id(),tk.getTicket_date(),tk.getReturn_date(),tk.getTicket_status(),tk.getEmployee_id()});
        }
    }
    public int checkEmpty(String input){
        int check = -1;
        if(input.isEmpty() || input.isBlank()){          
            check = 1;
        }
        return check;
    }
    public int checkInt(String input){
        int check = -1;
        try {
            Integer.parseInt(input);
        } catch (NumberFormatException ex){
            check = 1;}
        return check;
    }
    public int checkDate(String input) {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        int check = -1;
        try {
                format.parse(input);
            }
        catch(ParseException e){
                check = 1;
            }
        return check;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        but_addnew = new javax.swing.JButton();
        but_update = new javax.swing.JButton();
        but_delete = new javax.swing.JButton();
        but_save = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        but_exit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txt_ticketdate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_returneddate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_employee_id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rb_new = new javax.swing.JRadioButton();
        rb_late = new javax.swing.JRadioButton();
        rb_Returned = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txt_member_id = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_ticket_id = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        rb_searchid = new javax.swing.JRadioButton();
        rb_searchEmployeeID = new javax.swing.JRadioButton();
        txt_searchid = new javax.swing.JTextField();
        txt_searchEmployeeID = new javax.swing.JTextField();
        but_search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableborrowed_ticket = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 253, 232));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 3, 50)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(187, 149, 93));
        jLabel1.setText("Ticket Management");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 0, 385, 57);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jPanel3.setBackground(new java.awt.Color(255, 253, 232));

        but_addnew.setBackground(new java.awt.Color(187, 149, 93));
        but_addnew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_addnew.setText("Add new");
        but_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addnewActionPerformed(evt);
            }
        });

        but_update.setBackground(new java.awt.Color(187, 149, 93));
        but_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_update.setText("Update");
        but_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_updateActionPerformed(evt);
            }
        });

        but_delete.setBackground(new java.awt.Color(187, 149, 93));
        but_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_delete.setText("Delete");
        but_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_deleteActionPerformed(evt);
            }
        });

        but_save.setBackground(new java.awt.Color(187, 149, 93));
        but_save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_save.setText("Save");
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });

        but_cancel.setBackground(new java.awt.Color(187, 149, 93));
        but_cancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_cancel.setText("Cancel");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        but_exit.setBackground(new java.awt.Color(187, 149, 93));
        but_exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_exit.setText("Exit");
        but_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_exitActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Ticket Date:");

        txt_ticketdate.setBackground(new java.awt.Color(217, 217, 217));
        txt_ticketdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ticketdateActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Returned Date:");

        txt_returneddate.setBackground(new java.awt.Color(217, 217, 217));
        txt_returneddate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_returneddateActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Employee ID:");

        txt_employee_id.setBackground(new java.awt.Color(217, 217, 217));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Ticket Status:");

        rb_new.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup1.add(rb_new);
        rb_new.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_new.setForeground(new java.awt.Color(0, 0, 204));
        rb_new.setText("New");
        rb_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_newActionPerformed(evt);
            }
        });

        rb_late.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup1.add(rb_late);
        rb_late.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_late.setForeground(new java.awt.Color(255, 0, 0));
        rb_late.setText("Late");

        rb_Returned.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup1.add(rb_Returned);
        rb_Returned.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_Returned.setForeground(new java.awt.Color(0, 204, 0));
        rb_Returned.setText("Returned");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Member ID:");

        txt_member_id.setBackground(new java.awt.Color(217, 217, 217));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Ticket ID:");

        txt_ticket_id.setBackground(new java.awt.Color(217, 217, 217));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(but_addnew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_update, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(txt_ticket_id, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(txt_member_id, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(rb_new, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(rb_Returned, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(rb_late, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_returneddate)
                            .addComponent(txt_ticketdate)
                            .addComponent(txt_employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ticketdate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txt_returneddate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txt_employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel12))
                            .addComponent(txt_ticket_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3))
                            .addComponent(txt_member_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel4))
                            .addComponent(rb_new)
                            .addComponent(rb_Returned)
                            .addComponent(rb_late))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_addnew)
                    .addComponent(but_update)
                    .addComponent(but_delete)
                    .addComponent(but_save)
                    .addComponent(but_cancel)
                    .addComponent(but_exit))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Searching:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rb_searchid.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup2.add(rb_searchid);
        rb_searchid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_searchid.setText("by Ticket ID:");

        rb_searchEmployeeID.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup2.add(rb_searchEmployeeID);
        rb_searchEmployeeID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_searchEmployeeID.setText("by Employee ID:");

        txt_searchid.setBackground(new java.awt.Color(255, 255, 204));

        txt_searchEmployeeID.setBackground(new java.awt.Color(255, 255, 204));

        but_search.setBackground(new java.awt.Color(187, 149, 93));
        but_search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_search.setText("Search");
        but_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_searchActionPerformed(evt);
            }
        });

        jTableborrowed_ticket.setBackground(new java.awt.Color(255, 255, 204));
        jTableborrowed_ticket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Ticket ID", "Member ID", "Ticket Date", "Returned Date", "Ticket Status", "Employee ID"
            }
        ));
        jTableborrowed_ticket.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTableborrowed_ticket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableborrowed_ticketMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableborrowed_ticket);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_searchEmployeeID)
                    .addComponent(rb_searchid))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_searchEmployeeID, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                    .addComponent(txt_searchid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_search, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_searchid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_searchid))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_searchEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_searchEmployeeID)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(but_search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 850, 630);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableborrowed_ticketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableborrowed_ticketMouseClicked
        // TODO add your handling code here:
        int index=jTableborrowed_ticket.getSelectedRow();
        borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();
        ArrayList<borrowed_ticket> list=tkDAO.findALL();
        txt_ticket_id.setText(String.valueOf(list.get(index).getTicket_id()));
        txt_member_id.setText(String.valueOf(list.get(index).getMember_id()));

        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        String td =sdf.format(list.get(index).getTicket_date());
        txt_ticketdate.setText(td);
        String rd =sdf.format(list.get(index).getReturn_date());
        txt_returneddate.setText(rd);

        txt_employee_id.setText(String.valueOf(list.get(index).getEmployee_id()));
    }//GEN-LAST:event_jTableborrowed_ticketMouseClicked

    private void but_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_searchActionPerformed
        // TODO add your handling code here:
        if(rb_searchid.isSelected()) {
            int id=Integer.parseInt(txt_searchid.getText());
            borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();
            borrowed_ticket rs=tkDAO.findByID(id);
            if (rs==null) {
                JOptionPane.showMessageDialog(null, "No result!!");
            } else {
                ArrayList<borrowed_ticket> list=new ArrayList<borrowed_ticket>();
                list.add(rs);
                loadResult(list);
            }
        } else if(rb_searchEmployeeID.isSelected()) {
            int id=Integer.parseInt(txt_searchEmployeeID.getText());
            borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();
            ArrayList<borrowed_ticket> list=tkDAO.findByEmployeeId(id);
            if(list.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No Result!!");
            } else {
                loadResult(list);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please choose the method!!");
        }
        updateStatus(false);
    }//GEN-LAST:event_but_searchActionPerformed

    private void rb_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_newActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb_newActionPerformed

    private void txt_returneddateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_returneddateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_returneddateActionPerformed

    private void txt_ticketdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ticketdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ticketdateActionPerformed

    private void but_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_but_exitActionPerformed

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        updateStatus(true);
        loadData();
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        // TODO add your handling code here:
        if(typeAction) {
            // add new
            borrowed_ticket tk=new borrowed_ticket();
            
            try {
            tk.setMember_id(Integer.valueOf(txt_member_id.getText()));
            } catch(NumberFormatException ex){}
            if(rb_new.isSelected()) {
                tk.setTicket_status(1);
            }else {
                JOptionPane.showMessageDialog(null, "Please choose Ticket Status!!");}

            SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
            try {
                tk.setTicket_date(sdf.parse(txt_ticketdate.getText()));
            } catch(ParseException ex) {
                JOptionPane.showMessageDialog(null, "Please input valid Ticket Date !");}
            try {
                tk.setReturn_date(sdf.parse(txt_returneddate.getText()));
            } catch(ParseException ex) {
                JOptionPane.showMessageDialog(null, "Please input valid Return Date !");}

            try {
            tk.setEmployee_id(Integer.valueOf(txt_employee_id.getText()));
            } catch(NumberFormatException ex){}

            borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();
            
            String memberid= txt_member_id.getText();
            String employeeid= txt_employee_id.getText();
            if(checkEmpty(memberid)==1){
                JOptionPane.showMessageDialog(null, "Please input Member ID !");
            }
            else if (checkInt(memberid)==1){
                JOptionPane.showMessageDialog(null, "Please input valid Member ID !");
            }
            else if(checkEmpty(employeeid)==1){
                JOptionPane.showMessageDialog(null, "Please input Employee ID !");
            }
            else if (checkInt(employeeid)==1){
                JOptionPane.showMessageDialog(null, "Please input valid Employee ID !");
            }
            else tkDAO.addNew(tk);
            loadData();
        }
        else {
            // update
            borrowed_ticket tk=new borrowed_ticket();
            
            tk.setTicket_id(Integer.valueOf(txt_ticket_id.getText()));
            try {
            tk.setMember_id(Integer.valueOf(txt_member_id.getText()));
            } catch(NumberFormatException ex){}
            if(rb_late.isSelected()){
                tk.setTicket_status(3);
            } else if(rb_Returned.isSelected()){
                tk.setTicket_status(2);
            }else {}

            SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
            try {
                tk.setTicket_date(sdf.parse(txt_ticketdate.getText()));
            } catch(ParseException ex) {
                JOptionPane.showMessageDialog(null, "Please input valid Ticket Date !");}
            try {
                tk.setReturn_date(sdf.parse(txt_returneddate.getText()));
            } catch(ParseException ex) {
                JOptionPane.showMessageDialog(null, "Please input valid Return Date !");}

            try {
            tk.setEmployee_id(Integer.valueOf(txt_employee_id.getText()));
            } catch(NumberFormatException ex){}

            borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();
            
            String memberid= txt_member_id.getText();
            String employeeid= txt_employee_id.getText();
            if(checkEmpty(memberid)==1){
                JOptionPane.showMessageDialog(null, "Please input Member ID !");
            }
            else if (checkInt(memberid)==1){
                JOptionPane.showMessageDialog(null, "Please input valid Member ID !");
            }
            else if(checkEmpty(employeeid)==1){
                JOptionPane.showMessageDialog(null, "Please input Employee ID !");
            }
            else if (checkInt(employeeid)==1){
                JOptionPane.showMessageDialog(null, "Please input valid Employee ID !");
            }
            else tkDAO.update(tk);
            loadData();
        }
        updateStatus(true);
    }//GEN-LAST:event_but_saveActionPerformed

    private void but_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_deleteActionPerformed
        // TODO add your handling code here:
        int choose=JOptionPane.showConfirmDialog(null, "Do you want to delete?", "WARNING", JOptionPane.YES_NO_OPTION);
        if(choose==JOptionPane.YES_OPTION) {
            borrowed_ticketDAO tkDAO=new borrowed_ticketDAO();
            ArrayList<borrowed_ticket> list=tkDAO.findALL();
            int index=jTableborrowed_ticket.getSelectedRow();
            tkDAO.delete(list.get(index));
            loadData();
        }
    }//GEN-LAST:event_but_deleteActionPerformed

    private void but_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_updateActionPerformed
        // TODO add your handling code here:
        typeAction=false;
        updateStatus(false);
        rb_new.setEnabled(false);
        rb_Returned.setEnabled(true);
        rb_late.setEnabled(true);
    }//GEN-LAST:event_but_updateActionPerformed

    private void but_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addnewActionPerformed
        // TODO add your handling code here:
        updateStatus(false);
        typeAction=true;
        rb_new.setEnabled(true);
        rb_Returned.setEnabled(false);
        rb_late.setEnabled(false);
    }//GEN-LAST:event_but_addnewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameborrowed_ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameborrowed_ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameborrowed_ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameborrowed_ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameborrowed_ticket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_addnew;
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_delete;
    private javax.swing.JButton but_exit;
    private javax.swing.JButton but_save;
    private javax.swing.JButton but_search;
    private javax.swing.JButton but_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableborrowed_ticket;
    private javax.swing.JRadioButton rb_Returned;
    private javax.swing.JRadioButton rb_late;
    private javax.swing.JRadioButton rb_new;
    private javax.swing.JRadioButton rb_searchEmployeeID;
    private javax.swing.JRadioButton rb_searchid;
    private javax.swing.JTextField txt_employee_id;
    private javax.swing.JTextField txt_member_id;
    private javax.swing.JTextField txt_returneddate;
    private javax.swing.JTextField txt_searchEmployeeID;
    private javax.swing.JTextField txt_searchid;
    private javax.swing.JTextField txt_ticket_id;
    private javax.swing.JTextField txt_ticketdate;
    // End of variables declaration//GEN-END:variables
}
