/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package g8librarymanagement.gui;
import g8librarymanagement.dao.employee_listDAO;
import g8librarymanagement.model.employee_list;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class Employee extends javax.swing.JFrame {
    public DefaultTableModel tableModel;
    public boolean typeAction;
    /**
     * Creates new form employee management
     */
    public Employee() {
        initComponents();
        loadData(); // load data khi mo window
        updateStatus(true);
        this.setMinimumSize(new Dimension(950, 720));
        txt_em_id.setEnabled(false);
    }
    
    public void updateStatus(boolean value) {
        but_addnew.setEnabled(value);
        but_update.setEnabled(value);
        but_delete.setEnabled(value);
        but_save.setEnabled(!value);
        but_cancel.setEnabled(!value);
    }
    
    public void loadData() {
        tableModel = (DefaultTableModel) jTableemployee.getModel();
        int numRow=tableModel.getRowCount();
        if (numRow>0) {
            for (int index=0; index<numRow; index++) {
                tableModel.removeRow(0);
            }
        }
        employee_listDAO emDAO=new employee_listDAO();       
        ArrayList<employee_list> list=emDAO.findALL();
        int i=1;
        for (employee_list em : list) {
            tableModel.addRow(new Object[]{i++,em.getEmployee_id(),em.getFullname(),em.getDOB(),em.getGender(),em.getEmail(),em.getPhone(),em.getPosition(),em.getSalary(),em.getUsername(),em.getPass()});
        }
    }
    
    public void loadResult(ArrayList<employee_list> list) {
        tableModel = (DefaultTableModel) jTableemployee.getModel();
        int numRow=tableModel.getRowCount();
        if (numRow>0) {
            for (int index=0; index<numRow; index++) {
                tableModel.removeRow(0);
            }
        }   
        int i=1;
        for (employee_list em : list) {
            tableModel.addRow(new Object[]{i++,em.getEmployee_id(),em.getFullname(),em.getDOB(),em.getGender(),em.getEmail(),em.getPhone(),em.getPosition(),em.getSalary(),em.getUsername(),em.getPass()});
        }
    }
    
    public int checkEmail(String email){
        int check = -1;
        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
            + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher match = pattern.matcher(email);
        if(match.matches()){          
            check = 1;
        }
        return check;
    }
    
    public int checkPhone(String phone){
        int check = -1;
        Pattern pattern = Pattern.compile("(0|0+[0-9]{1})+([0-9]{9})\\b");
        Matcher match = pattern.matcher(phone);
        if(match.matches()){          
            check = 1;
        }
        return check;
    }
    
    public int checkEmpty(String input){
        int check = -1;
        if(input.isEmpty() || input.isBlank()){          
            check = 1;
        }
        return check;
    }
    
    public int checkPass(String pass){
        int check = -1;
        Pattern pattern = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,32}$");
        Matcher match = pattern.matcher(pass);
        if(match.matches()){          
            check = 1;
        }
        return check;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_gender = new javax.swing.ButtonGroup();
        buttonGroup_search = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        DOB = new javax.swing.JLabel();
        txt_dob = new javax.swing.JTextField();
        Salary = new javax.swing.JLabel();
        txt_salary = new javax.swing.JTextField();
        Pos = new javax.swing.JLabel();
        txt_position = new javax.swing.JTextField();
        username = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        pass = new javax.swing.JLabel();
        txt_pass = new javax.swing.JPasswordField();
        ID = new javax.swing.JLabel();
        txt_em_id = new javax.swing.JTextField();
        FN = new javax.swing.JLabel();
        txt_fullname = new javax.swing.JTextField();
        Gender = new javax.swing.JLabel();
        rb_male = new javax.swing.JRadioButton();
        rb_female = new javax.swing.JRadioButton();
        email = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        Phone = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        but_addnew = new javax.swing.JButton();
        but_update = new javax.swing.JButton();
        but_delete = new javax.swing.JButton();
        but_save = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        but_exit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        rb_searchid = new javax.swing.JRadioButton();
        txt_searchid = new javax.swing.JTextField();
        rb_searchname = new javax.swing.JRadioButton();
        txt_searchname = new javax.swing.JTextField();
        but_search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableemployee = new javax.swing.JTable();
        EM = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 253, 232));

        DOB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DOB.setText("Date Of Birth:");

        txt_dob.setBackground(new java.awt.Color(217, 217, 217));
        txt_dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dobActionPerformed(evt);
            }
        });

        Salary.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Salary.setText("Salary:");

        txt_salary.setBackground(new java.awt.Color(217, 217, 217));
        txt_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_salaryActionPerformed(evt);
            }
        });

        Pos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Pos.setText("Position:");

        txt_position.setBackground(new java.awt.Color(217, 217, 217));

        username.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        username.setText("Username:");

        txt_username.setBackground(new java.awt.Color(217, 217, 217));

        pass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pass.setText("Password:");

        txt_pass.setBackground(new java.awt.Color(217, 217, 217));

        ID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ID.setText("Employee ID:");

        txt_em_id.setBackground(new java.awt.Color(217, 217, 217));

        FN.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        FN.setText("Full name:");

        txt_fullname.setBackground(new java.awt.Color(217, 217, 217));
        txt_fullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fullnameActionPerformed(evt);
            }
        });

        Gender.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Gender.setText("Gender:");

        rb_male.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup_gender.add(rb_male);
        rb_male.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_male.setText("Male");

        rb_female.setBackground(new java.awt.Color(255, 253, 232));
        buttonGroup_gender.add(rb_female);
        rb_female.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_female.setText("Female");

        email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        email.setText("Email:");

        txt_email.setBackground(new java.awt.Color(217, 217, 217));

        Phone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Phone.setText("Contact Number:");

        txt_phone.setBackground(new java.awt.Color(217, 217, 217));

        but_addnew.setBackground(new java.awt.Color(187, 149, 93));
        but_addnew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_addnew.setText("Add new");
        but_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addnewActionPerformed(evt);
            }
        });

        but_update.setBackground(new java.awt.Color(187, 149, 93));
        but_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_update.setText("Update");
        but_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_updateActionPerformed(evt);
            }
        });

        but_delete.setBackground(new java.awt.Color(187, 149, 93));
        but_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_delete.setText("Delete");
        but_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_deleteActionPerformed(evt);
            }
        });

        but_save.setBackground(new java.awt.Color(187, 149, 93));
        but_save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_save.setText("Save");
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });

        but_cancel.setBackground(new java.awt.Color(187, 149, 93));
        but_cancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_cancel.setText("Cancel");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        but_exit.setBackground(new java.awt.Color(187, 149, 93));
        but_exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_exit.setText("Exit");
        but_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ID)
                            .addComponent(FN))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(txt_em_id, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DOB)
                                .addGap(18, 18, 18)
                                .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_phone, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_fullname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Gender)
                                            .addComponent(email))
                                        .addGap(60, 60, 60)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(rb_male, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(rb_female, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(username)
                                    .addComponent(pass)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Phone)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Pos)
                            .addComponent(Salary))
                        .addGap(94, 94, 94)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_position, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_addnew)
                .addGap(32, 32, 32)
                .addComponent(but_update, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(but_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(but_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ID)
                        .addComponent(txt_em_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(DOB))
                        .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb_male)
                    .addComponent(Gender)
                    .addComponent(txt_fullname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_female)
                    .addComponent(FN))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phone)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(username))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pass)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_position, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Pos))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Salary))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_addnew)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_delete)
                        .addComponent(but_update))
                    .addComponent(but_save)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_exit)
                        .addComponent(but_cancel)))
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(10, 70, 910, 320);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Searching:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rb_searchid.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup_search.add(rb_searchid);
        rb_searchid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_searchid.setText("by ID:");

        txt_searchid.setBackground(new java.awt.Color(255, 255, 204));

        rb_searchname.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup_search.add(rb_searchname);
        rb_searchname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb_searchname.setText("by Name:");

        txt_searchname.setBackground(new java.awt.Color(255, 255, 204));

        but_search.setBackground(new java.awt.Color(187, 149, 93));
        but_search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_search.setText("Search");
        but_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_searchActionPerformed(evt);
            }
        });

        jTableemployee.setBackground(new java.awt.Color(255, 255, 204));
        jTableemployee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 204)));
        jTableemployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Employee ID", "Full name", "Date Of Birth", "Gender", "Email", "Phone", "Position", "Salary", "Username", "Password"
            }
        ));
        jTableemployee.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTableemployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableemployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableemployee);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_searchname)
                    .addComponent(rb_searchid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_searchname, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addComponent(txt_searchid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_search, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 893, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_searchid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_searchid))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_searchname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_searchname)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(but_search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        EM.setFont(new java.awt.Font("Monotype Corsiva", 1, 50)); // NOI18N
        EM.setForeground(new java.awt.Color(187, 149, 93));
        EM.setText("Employee Management");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EM, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(235, 235, 235))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(EM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 940, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addnewActionPerformed
        // TODO add your handling code here:
        updateStatus(false);
        typeAction=true;
    }//GEN-LAST:event_but_addnewActionPerformed

    private void but_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_updateActionPerformed
        // TODO add your handling code here:
        typeAction=false;
        updateStatus(false);
    }//GEN-LAST:event_but_updateActionPerformed

    private void but_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_deleteActionPerformed
        // TODO add your handling code here:
        int choose=JOptionPane.showConfirmDialog(null, "Do you want to delete?", "WARNING", JOptionPane.YES_NO_OPTION);
        if(choose==JOptionPane.YES_OPTION) {
            employee_listDAO emDAO=new employee_listDAO();
            ArrayList<employee_list> list=emDAO.findALL();
            int index=jTableemployee.getSelectedRow();
            emDAO.delete(list.get(index));
            loadData();
        }
    }//GEN-LAST:event_but_deleteActionPerformed

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        // TODO add your handling code here:
        if(typeAction) {
        // add new   
        employee_list em=new employee_list();       
        em.setFullname(txt_fullname.getText());
        if(rb_male.isSelected()) {
            em.setGender(1);
        } else {
            em.setGender(0);
        }        
        em.setSalary(Integer.valueOf(txt_salary.getText()));        
        em.setPosition(txt_position.getText());      
        em.setUsername(txt_username.getText());       
        String pass=txt_pass.getText();
            int checkpass = em.checkPass(pass);
            if (checkpass != -1){
            em.setPass(pass);} 
            else {
                JOptionPane.showMessageDialog(null, "Please input valid pass!");}
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        try {
        em.setDOB(sdf.parse(txt_dob.getText()));
        } catch(Exception ex) {
        JOptionPane.showMessageDialog(null, "Please input valid date!");}                    
        String email=txt_email.getText();
            int checkemail = em.checkEmail(email); 
            if(checkemail != -1){
            em.setEmail(email);}
                else {
                JOptionPane.showMessageDialog(null, "Please input valid email!");}
        String phone=txt_phone.getText();     
        
        if(checkEmpty(txt_fullname.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input full name!");} 
        else if(checkEmpty(txt_salary.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input salary!");}
        else if(checkEmpty(txt_position.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input position!");}
        else if(checkEmpty(txt_username.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input username!");}
        else if(checkEmpty(txt_pass.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input password!");}
        else if(checkEmpty(email)==1){
            JOptionPane.showMessageDialog(null, "Please input email!");}          
        else if(checkEmpty(phone) == 1){
            JOptionPane.showMessageDialog(null, "Please input phone!");} 
        else if (checkPhone(phone) != 1) {
            JOptionPane.showMessageDialog(null, "Please input valid phone number !");} 
        else {       
        em.setPhone(phone);       
        employee_listDAO emDAO=new employee_listDAO();
        emDAO.addNew(em);
        loadData();
            }
        }
        
        else {
        // update    
        employee_list em=new employee_list();
        em.setEmployee_id(Integer.valueOf(txt_em_id.getText()));             
        em.setFullname(txt_fullname.getText());
        if(rb_male.isSelected()) {
            em.setGender(1);
        } else {
            em.setGender(0);
        }        
        em.setSalary(Integer.valueOf(txt_salary.getText()));        
        em.setPosition(txt_position.getText());      
        em.setUsername(txt_username.getText());       
        String pass=txt_pass.getText();
            int checkpass = em.checkPass(pass);
            if (checkpass != -1){
            em.setPass(pass);} 
            else {
                JOptionPane.showMessageDialog(null, "Please input valid pass!");}
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        try {
        em.setDOB(sdf.parse(txt_dob.getText()));
        } catch(Exception ex) {
        JOptionPane.showMessageDialog(null, "Please input valid date!");}                    
        String email=txt_email.getText();
            int checkemail = em.checkEmail(email); 
            if(checkemail != -1){
            em.setEmail(email);}
                else {
                JOptionPane.showMessageDialog(null, "Please input valid email!");}
        String phone=txt_phone.getText();     
        
        if(checkEmpty(txt_fullname.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input full name!");} 
        else if(checkEmpty(txt_salary.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input salary!");}
        else if(checkEmpty(txt_position.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input position!");}
        else if(checkEmpty(txt_username.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input username!");}
        else if(checkEmpty(txt_pass.getText())==1){
            JOptionPane.showMessageDialog(null, "Please input password!");}
        else if(checkEmpty(email)==1){
            JOptionPane.showMessageDialog(null, "Please input email!");}          
        else if(checkEmpty(phone) == 1){
            JOptionPane.showMessageDialog(null, "Please input phone!");} 
        else if (checkPhone(phone) != 1) {
            JOptionPane.showMessageDialog(null, "Please input valid phone number !");} 
        else {
        em.setPhone(phone);    
        employee_listDAO emDAO=new employee_listDAO();
            emDAO.update(em);
        loadData();
        }
        }
        updateStatus(true);
    }//GEN-LAST:event_but_saveActionPerformed

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        updateStatus(true);
        loadData();
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_but_exitActionPerformed

    private void but_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_searchActionPerformed
        // TODO add your handling code here:
        if(rb_searchid.isSelected()) {
            int id=Integer.parseInt(txt_searchid.getText());
                employee_listDAO emDAO=new employee_listDAO();
                employee_list rs=emDAO.findByID(id);
                if (rs==null) {
                    JOptionPane.showMessageDialog(null, "No result!!");
                } else {
                    ArrayList<employee_list> list=new ArrayList<employee_list>();
                    list.add(rs);
                    loadResult(list);
                }
        } else if(rb_searchname.isSelected()) {
            String name=txt_searchname.getText();
            employee_listDAO emDAO=new employee_listDAO();
            ArrayList<employee_list> list=emDAO.findByName(name);
            if(list.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No Result!!");
            } else {
                loadResult(list);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please choose the method!!");
        }
        updateStatus(false);
    }//GEN-LAST:event_but_searchActionPerformed

    private void txt_dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dobActionPerformed

    private void txt_fullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fullnameActionPerformed

    private void txt_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_salaryActionPerformed

    private void jTableemployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableemployeeMouseClicked
        // TODO add your handling code here:
        updateStatus(true);
        int index=jTableemployee.getSelectedRow();
        employee_listDAO emDAO=new employee_listDAO();
        ArrayList<employee_list> list=emDAO.findALL();
        txt_em_id.setText(String.valueOf(list.get(index).getEmployee_id()));
        txt_fullname.setText(list.get(index).getFullname());
        if(list.get(index).getGender()==1) {
            rb_male.setSelected(true);
        } else {
            rb_female.setSelected(true);
        }
        txt_salary.setText(String.valueOf(list.get(index).getSalary()));
        txt_position.setText(list.get(index).getPosition());
        txt_username.setText(list.get(index).getUsername());
        txt_pass.setText(list.get(index).getPass());
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        String dob =sdf.format(list.get(index).getDOB());
        txt_dob.setText(dob);
        txt_email.setText(list.get(index).getEmail());
        txt_phone.setText(list.get(index).getPhone());      
    }//GEN-LAST:event_jTableemployeeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel EM;
    private javax.swing.JLabel FN;
    private javax.swing.JLabel Gender;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel Phone;
    private javax.swing.JLabel Pos;
    private javax.swing.JLabel Salary;
    private javax.swing.JButton but_addnew;
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_delete;
    private javax.swing.JButton but_exit;
    private javax.swing.JButton but_save;
    private javax.swing.JButton but_search;
    private javax.swing.JButton but_update;
    private javax.swing.ButtonGroup buttonGroup_gender;
    private javax.swing.ButtonGroup buttonGroup_search;
    private javax.swing.JLabel email;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableemployee;
    private javax.swing.JLabel pass;
    private javax.swing.JRadioButton rb_female;
    private javax.swing.JRadioButton rb_male;
    private javax.swing.JRadioButton rb_searchid;
    private javax.swing.JRadioButton rb_searchname;
    private javax.swing.JTextField txt_dob;
    private javax.swing.JTextField txt_em_id;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fullname;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_position;
    private javax.swing.JTextField txt_salary;
    private javax.swing.JTextField txt_searchid;
    private javax.swing.JTextField txt_searchname;
    private javax.swing.JTextField txt_username;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
